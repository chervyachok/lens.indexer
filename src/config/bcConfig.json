{
    "137": {
        "startBlock": 28384641,
        "lensHub": {
            "address": "0xDb46d1Dc155634FbC732f92E853b10B288AD5a1d",
            "abi": [
                "constructor(address followNFTImpl, address collectNFTImpl)",
                "error CallerNotCollectNFT()",
                "error CallerNotFollowNFT()",
                "error CannotInitImplementation()",
                "error EmergencyAdminCannotUnpause()",
                "error InitParamsInvalid()",
                "error Initialized()",
                "error NotGovernance()",
                "error NotGovernanceOrEmergencyAdmin()",
                "error NotOwnerOrApproved()",
                "error NotProfileOwner()",
                "error NotProfileOwnerOrDispatcher()",
                "error Paused()",
                "error ProfileCreatorNotWhitelisted()",
                "error ProfileImageURILengthInvalid()",
                "error PublicationDoesNotExist()",
                "error PublishingPaused()",
                "error SignatureExpired()",
                "error SignatureInvalid()",
                "error ZeroSpender()",
                "event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)",
                "event ApprovalForAll(address indexed owner, address indexed operator, bool approved)",
                "event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)",
                "function approve(address to, uint256 tokenId)",
                "function balanceOf(address owner) view returns (uint256)",
                "function burn(uint256 tokenId)",
                "function burnWithSig(uint256 tokenId, tuple(uint8 v, bytes32 r, bytes32 s, uint256 deadline) sig)",
                "function collect(uint256 profileId, uint256 pubId, bytes data) returns (uint256)",
                "function collectWithSig(tuple(address collector, uint256 profileId, uint256 pubId, bytes data, tuple(uint8 v, bytes32 r, bytes32 s, uint256 deadline) sig) vars) returns (uint256)",
                "function comment(tuple(uint256 profileId, string contentURI, uint256 profileIdPointed, uint256 pubIdPointed, bytes referenceModuleData, address collectModule, bytes collectModuleInitData, address referenceModule, bytes referenceModuleInitData) vars) returns (uint256)",
                "function commentWithSig(tuple(uint256 profileId, string contentURI, uint256 profileIdPointed, uint256 pubIdPointed, bytes referenceModuleData, address collectModule, bytes collectModuleInitData, address referenceModule, bytes referenceModuleInitData, tuple(uint8 v, bytes32 r, bytes32 s, uint256 deadline) sig) vars) returns (uint256)",
                "function createProfile(tuple(address to, string handle, string imageURI, address followModule, bytes followModuleInitData, string followNFTURI) vars) returns (uint256)",
                "function defaultProfile(address wallet) view returns (uint256)",
                "function emitCollectNFTTransferEvent(uint256 profileId, uint256 pubId, uint256 collectNFTId, address from, address to)",
                "function emitFollowNFTTransferEvent(uint256 profileId, uint256 followNFTId, address from, address to)",
                "function exists(uint256 tokenId) view returns (bool)",
                "function follow(uint256[] profileIds, bytes[] datas) returns (uint256[])",
                "function followWithSig(tuple(address follower, uint256[] profileIds, bytes[] datas, tuple(uint8 v, bytes32 r, bytes32 s, uint256 deadline) sig) vars) returns (uint256[])",
                "function getApproved(uint256 tokenId) view returns (address)",
                "function getCollectModule(uint256 profileId, uint256 pubId) view returns (address)",
                "function getCollectNFT(uint256 profileId, uint256 pubId) view returns (address)",
                "function getCollectNFTImpl() view returns (address)",
                "function getContentURI(uint256 profileId, uint256 pubId) view returns (string)",
                "function getDispatcher(uint256 profileId) view returns (address)",
                "function getDomainSeparator() view returns (bytes32)",
                "function getFollowModule(uint256 profileId) view returns (address)",
                "function getFollowNFT(uint256 profileId) view returns (address)",
                "function getFollowNFTImpl() view returns (address)",
                "function getFollowNFTURI(uint256 profileId) view returns (string)",
                "function getGovernance() view returns (address)",
                "function getHandle(uint256 profileId) view returns (string)",
                "function getProfile(uint256 profileId) view returns (tuple(uint256 pubCount, address followModule, address followNFT, string handle, string imageURI, string followNFTURI))",
                "function getProfileIdByHandle(string handle) view returns (uint256)",
                "function getPub(uint256 profileId, uint256 pubId) view returns (tuple(uint256 profileIdPointed, uint256 pubIdPointed, string contentURI, address referenceModule, address collectModule, address collectNFT))",
                "function getPubCount(uint256 profileId) view returns (uint256)",
                "function getPubPointer(uint256 profileId, uint256 pubId) view returns (uint256, uint256)",
                "function getPubType(uint256 profileId, uint256 pubId) view returns (uint8)",
                "function getReferenceModule(uint256 profileId, uint256 pubId) view returns (address)",
                "function getState() view returns (uint8)",
                "function initialize(string name, string symbol, address newGovernance)",
                "function isApprovedForAll(address owner, address operator) view returns (bool)",
                "function isCollectModuleWhitelisted(address collectModule) view returns (bool)",
                "function isFollowModuleWhitelisted(address followModule) view returns (bool)",
                "function isProfileCreatorWhitelisted(address profileCreator) view returns (bool)",
                "function isReferenceModuleWhitelisted(address referenceModule) view returns (bool)",
                "function mintTimestampOf(uint256 tokenId) view returns (uint256)",
                "function mirror(tuple(uint256 profileId, uint256 profileIdPointed, uint256 pubIdPointed, bytes referenceModuleData, address referenceModule, bytes referenceModuleInitData) vars) returns (uint256)",
                "function mirrorWithSig(tuple(uint256 profileId, uint256 profileIdPointed, uint256 pubIdPointed, bytes referenceModuleData, address referenceModule, bytes referenceModuleInitData, tuple(uint8 v, bytes32 r, bytes32 s, uint256 deadline) sig) vars) returns (uint256)",
                "function name() view returns (string)",
                "function ownerOf(uint256 tokenId) view returns (address)",
                "function permit(address spender, uint256 tokenId, tuple(uint8 v, bytes32 r, bytes32 s, uint256 deadline) sig)",
                "function permitForAll(address owner, address operator, bool approved, tuple(uint8 v, bytes32 r, bytes32 s, uint256 deadline) sig)",
                "function post(tuple(uint256 profileId, string contentURI, address collectModule, bytes collectModuleInitData, address referenceModule, bytes referenceModuleInitData) vars) returns (uint256)",
                "function postWithSig(tuple(uint256 profileId, string contentURI, address collectModule, bytes collectModuleInitData, address referenceModule, bytes referenceModuleInitData, tuple(uint8 v, bytes32 r, bytes32 s, uint256 deadline) sig) vars) returns (uint256)",
                "function safeTransferFrom(address from, address to, uint256 tokenId)",
                "function safeTransferFrom(address from, address to, uint256 tokenId, bytes _data)",
                "function setApprovalForAll(address operator, bool approved)",
                "function setDefaultProfile(uint256 profileId)",
                "function setDefaultProfileWithSig(tuple(address wallet, uint256 profileId, tuple(uint8 v, bytes32 r, bytes32 s, uint256 deadline) sig) vars)",
                "function setDispatcher(uint256 profileId, address dispatcher)",
                "function setDispatcherWithSig(tuple(uint256 profileId, address dispatcher, tuple(uint8 v, bytes32 r, bytes32 s, uint256 deadline) sig) vars)",
                "function setEmergencyAdmin(address newEmergencyAdmin)",
                "function setFollowModule(uint256 profileId, address followModule, bytes followModuleInitData)",
                "function setFollowModuleWithSig(tuple(uint256 profileId, address followModule, bytes followModuleInitData, tuple(uint8 v, bytes32 r, bytes32 s, uint256 deadline) sig) vars)",
                "function setFollowNFTURI(uint256 profileId, string followNFTURI)",
                "function setFollowNFTURIWithSig(tuple(uint256 profileId, string followNFTURI, tuple(uint8 v, bytes32 r, bytes32 s, uint256 deadline) sig) vars)",
                "function setGovernance(address newGovernance)",
                "function setProfileImageURI(uint256 profileId, string imageURI)",
                "function setProfileImageURIWithSig(tuple(uint256 profileId, string imageURI, tuple(uint8 v, bytes32 r, bytes32 s, uint256 deadline) sig) vars)",
                "function setState(uint8 newState)",
                "function sigNonces(address) view returns (uint256)",
                "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                "function symbol() view returns (string)",
                "function tokenByIndex(uint256 index) view returns (uint256)",
                "function tokenDataOf(uint256 tokenId) view returns (tuple(address owner, uint96 mintTimestamp))",
                "function tokenOfOwnerByIndex(address owner, uint256 index) view returns (uint256)",
                "function tokenURI(uint256 tokenId) view returns (string)",
                "function totalSupply() view returns (uint256)",
                "function transferFrom(address from, address to, uint256 tokenId)",
                "function whitelistCollectModule(address collectModule, bool whitelist)",
                "function whitelistFollowModule(address followModule, bool whitelist)",
                "function whitelistProfileCreator(address profileCreator, bool whitelist)",
                "function whitelistReferenceModule(address referenceModule, bool whitelist)"                
            ]
        },
        "lensHubProfileEvents": [
            "event ProfileCreated( uint256 indexed profileId, address indexed creator, address indexed to, string handle, string imageURI, address followModule, bytes followModuleReturnData, string followNFTURI, uint256 timestamp )",
            "event DefaultProfileSet(address indexed wallet, uint256 indexed profileId, uint256 timestamp)",
            "event DispatcherSet(uint256 indexed profileId, address indexed dispatcher, uint256 timestamp)",
            "event ProfileImageURISet(uint256 indexed profileId, string imageURI, uint256 timestamp)",
            "event FollowNFTURISet(uint256 indexed profileId, string followNFTURI, uint256 timestamp)",
            "event FollowModuleSet( uint256 indexed profileId, address followModule, bytes followModuleReturnData, uint256 timestamp )",
            "event PostCreated( uint256 indexed profileId, uint256 indexed pubId, string contentURI, address collectModule, bytes collectModuleReturnData, address referenceModule, bytes referenceModuleReturnData, uint256 timestamp )",
            "event CommentCreated( uint256 indexed profileId, uint256 indexed pubId, string contentURI, uint256 profileIdPointed, uint256 pubIdPointed, bytes referenceModuleData, address collectModule, bytes collectModuleReturnData, address referenceModule, bytes referenceModuleReturnData, uint256 timestamp )",
            "event MirrorCreated( uint256 indexed profileId, uint256 indexed pubId, uint256 profileIdPointed, uint256 pubIdPointed, bytes referenceModuleData, address referenceModule, bytes referenceModuleReturnData, uint256 timestamp )",
            "event FollowNFTDeployed( uint256 indexed profileId, address indexed followNFT, uint256 timestamp )",
            "event CollectNFTDeployed( uint256 indexed profileId, uint256 indexed pubId, address indexed collectNFT, uint256 timestamp )",
            "event Collected( address indexed collector, uint256 indexed profileId, uint256 indexed pubId, uint256 rootProfileId, uint256 rootPubId, bytes collectModuleData, uint256 timestamp )",
            "event Followed( address indexed follower, uint256[] profileIds, bytes[] followModuleDatas, uint256 timestamp )",
            "event FollowNFTTransferred( uint256 indexed profileId, uint256 indexed followNFTId, address from, address to, uint256 timestamp )",
            "event CollectNFTTransferred( uint256 indexed profileId, uint256 indexed pubId, uint256 indexed collectNFTId, address from, address to, uint256 timestamp )",
            "event FollowNFTInitialized(uint256 indexed profileId, uint256 timestamp)",
            "event FollowNFTDelegatedPowerChanged( address indexed delegate, uint256 indexed newPower, uint256 timestamp )",
            "event CollectNFTInitialized( uint256 indexed profileId, uint256 indexed pubId, uint256 timestamp )",
            "event FollowsApproved( address indexed owner, uint256 indexed profileId, address[] addresses, bool[] approved, uint256 timestamp )",
            "event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)"
        ],
        "lensPeriphery": {
            "address": "0xeff187b4190E551FC25a7fA4dFC6cf7fDeF7194f",
            "abi": [{"inputs":[{"internalType":"contract ILensHub","name":"hub","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ArrayMismatch","type":"error"},{"inputs":[],"name":"FollowInvalid","type":"error"},{"inputs":[],"name":"NotProfileOwnerOrDispatcher","type":"error"},{"inputs":[],"name":"SignatureExpired","type":"error"},{"inputs":[],"name":"SignatureInvalid","type":"error"},{"inputs":[],"name":"TokenDoesNotExist","type":"error"},{"inputs":[],"name":"HUB","outputs":[{"internalType":"contract ILensHub","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"NAME","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"profileId","type":"uint256"}],"name":"getProfileMetadataURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"profileId","type":"uint256"},{"internalType":"string","name":"metadata","type":"string"}],"name":"setProfileMetadataURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"profileId","type":"uint256"},{"internalType":"string","name":"metadata","type":"string"},{"components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"internalType":"struct DataTypes.EIP712Signature","name":"sig","type":"tuple"}],"internalType":"struct DataTypes.SetProfileMetadataWithSigData","name":"vars","type":"tuple"}],"name":"setProfileMetadataURIWithSig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"sigNonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"profileIds","type":"uint256[]"},{"internalType":"bool[]","name":"enables","type":"bool[]"}],"name":"toggleFollow","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"follower","type":"address"},{"internalType":"uint256[]","name":"profileIds","type":"uint256[]"},{"internalType":"bool[]","name":"enables","type":"bool[]"},{"components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"internalType":"struct DataTypes.EIP712Signature","name":"sig","type":"tuple"}],"internalType":"struct DataTypes.ToggleFollowWithSigData","name":"vars","type":"tuple"}],"name":"toggleFollowWithSig","outputs":[],"stateMutability":"nonpayable","type":"function"}]
        },
        "lensPeripheryEvents": [            
            "event FollowsToggled( address indexed owner, uint256[] profileIds, bool[] enabled, uint256 timestamp )",
            "event ProfileMetadataSet(uint256 indexed profileId, string metadata, uint256 timestamp)"
        ]         
    },
    "80001": {
        "startBlock": 34358086,
        "lensHub": {
            "address": "0x60Ae865ee4C725cd04353b5AAb364553f56ceF82",
            "abi": [
                "constructor(address followNFTImpl, address collectNFTImpl)",
                "error CallerNotCollectNFT()",
                "error CallerNotFollowNFT()",
                "error CannotInitImplementation()",
                "error EmergencyAdminCannotUnpause()",
                "error InitParamsInvalid()",
                "error Initialized()",
                "error NotGovernance()",
                "error NotGovernanceOrEmergencyAdmin()",
                "error NotOwnerOrApproved()",
                "error NotProfileOwner()",
                "error NotProfileOwnerOrDispatcher()",
                "error Paused()",
                "error ProfileCreatorNotWhitelisted()",
                "error ProfileImageURILengthInvalid()",
                "error PublicationDoesNotExist()",
                "error PublishingPaused()",
                "error SignatureExpired()",
                "error SignatureInvalid()",
                "error ZeroSpender()",
                "event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)",
                "event ApprovalForAll(address indexed owner, address indexed operator, bool approved)",
                "event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)",
                "function approve(address to, uint256 tokenId)",
                "function balanceOf(address owner) view returns (uint256)",
                "function burn(uint256 tokenId)",
                "function burnWithSig(uint256 tokenId, tuple(uint8 v, bytes32 r, bytes32 s, uint256 deadline) sig)",
                "function collect(uint256 profileId, uint256 pubId, bytes data) returns (uint256)",
                "function collectWithSig(tuple(address collector, uint256 profileId, uint256 pubId, bytes data, tuple(uint8 v, bytes32 r, bytes32 s, uint256 deadline) sig) vars) returns (uint256)",
                "function comment(tuple(uint256 profileId, string contentURI, uint256 profileIdPointed, uint256 pubIdPointed, bytes referenceModuleData, address collectModule, bytes collectModuleInitData, address referenceModule, bytes referenceModuleInitData) vars) returns (uint256)",
                "function commentWithSig(tuple(uint256 profileId, string contentURI, uint256 profileIdPointed, uint256 pubIdPointed, bytes referenceModuleData, address collectModule, bytes collectModuleInitData, address referenceModule, bytes referenceModuleInitData, tuple(uint8 v, bytes32 r, bytes32 s, uint256 deadline) sig) vars) returns (uint256)",
                "function createProfile(tuple(address to, string handle, string imageURI, address followModule, bytes followModuleInitData, string followNFTURI) vars) returns (uint256)",
                "function defaultProfile(address wallet) view returns (uint256)",
                "function emitCollectNFTTransferEvent(uint256 profileId, uint256 pubId, uint256 collectNFTId, address from, address to)",
                "function emitFollowNFTTransferEvent(uint256 profileId, uint256 followNFTId, address from, address to)",
                "function exists(uint256 tokenId) view returns (bool)",
                "function follow(uint256[] profileIds, bytes[] datas) returns (uint256[])",
                "function followWithSig(tuple(address follower, uint256[] profileIds, bytes[] datas, tuple(uint8 v, bytes32 r, bytes32 s, uint256 deadline) sig) vars) returns (uint256[])",
                "function getApproved(uint256 tokenId) view returns (address)",
                "function getCollectModule(uint256 profileId, uint256 pubId) view returns (address)",
                "function getCollectNFT(uint256 profileId, uint256 pubId) view returns (address)",
                "function getCollectNFTImpl() view returns (address)",
                "function getContentURI(uint256 profileId, uint256 pubId) view returns (string)",
                "function getDispatcher(uint256 profileId) view returns (address)",
                "function getDomainSeparator() view returns (bytes32)",
                "function getFollowModule(uint256 profileId) view returns (address)",
                "function getFollowNFT(uint256 profileId) view returns (address)",
                "function getFollowNFTImpl() view returns (address)",
                "function getFollowNFTURI(uint256 profileId) view returns (string)",
                "function getGovernance() view returns (address)",
                "function getHandle(uint256 profileId) view returns (string)",
                "function getProfile(uint256 profileId) view returns (tuple(uint256 pubCount, address followModule, address followNFT, string handle, string imageURI, string followNFTURI))",
                "function getProfileIdByHandle(string handle) view returns (uint256)",
                "function getPub(uint256 profileId, uint256 pubId) view returns (tuple(uint256 profileIdPointed, uint256 pubIdPointed, string contentURI, address referenceModule, address collectModule, address collectNFT))",
                "function getPubCount(uint256 profileId) view returns (uint256)",
                "function getPubPointer(uint256 profileId, uint256 pubId) view returns (uint256, uint256)",
                "function getPubType(uint256 profileId, uint256 pubId) view returns (uint8)",
                "function getReferenceModule(uint256 profileId, uint256 pubId) view returns (address)",
                "function getState() view returns (uint8)",
                "function initialize(string name, string symbol, address newGovernance)",
                "function isApprovedForAll(address owner, address operator) view returns (bool)",
                "function isCollectModuleWhitelisted(address collectModule) view returns (bool)",
                "function isFollowModuleWhitelisted(address followModule) view returns (bool)",
                "function isProfileCreatorWhitelisted(address profileCreator) view returns (bool)",
                "function isReferenceModuleWhitelisted(address referenceModule) view returns (bool)",
                "function mintTimestampOf(uint256 tokenId) view returns (uint256)",
                "function mirror(tuple(uint256 profileId, uint256 profileIdPointed, uint256 pubIdPointed, bytes referenceModuleData, address referenceModule, bytes referenceModuleInitData) vars) returns (uint256)",
                "function mirrorWithSig(tuple(uint256 profileId, uint256 profileIdPointed, uint256 pubIdPointed, bytes referenceModuleData, address referenceModule, bytes referenceModuleInitData, tuple(uint8 v, bytes32 r, bytes32 s, uint256 deadline) sig) vars) returns (uint256)",
                "function name() view returns (string)",
                "function ownerOf(uint256 tokenId) view returns (address)",
                "function permit(address spender, uint256 tokenId, tuple(uint8 v, bytes32 r, bytes32 s, uint256 deadline) sig)",
                "function permitForAll(address owner, address operator, bool approved, tuple(uint8 v, bytes32 r, bytes32 s, uint256 deadline) sig)",
                "function post(tuple(uint256 profileId, string contentURI, address collectModule, bytes collectModuleInitData, address referenceModule, bytes referenceModuleInitData) vars) returns (uint256)",
                "function postWithSig(tuple(uint256 profileId, string contentURI, address collectModule, bytes collectModuleInitData, address referenceModule, bytes referenceModuleInitData, tuple(uint8 v, bytes32 r, bytes32 s, uint256 deadline) sig) vars) returns (uint256)",
                "function safeTransferFrom(address from, address to, uint256 tokenId)",
                "function safeTransferFrom(address from, address to, uint256 tokenId, bytes _data)",
                "function setApprovalForAll(address operator, bool approved)",
                "function setDefaultProfile(uint256 profileId)",
                "function setDefaultProfileWithSig(tuple(address wallet, uint256 profileId, tuple(uint8 v, bytes32 r, bytes32 s, uint256 deadline) sig) vars)",
                "function setDispatcher(uint256 profileId, address dispatcher)",
                "function setDispatcherWithSig(tuple(uint256 profileId, address dispatcher, tuple(uint8 v, bytes32 r, bytes32 s, uint256 deadline) sig) vars)",
                "function setEmergencyAdmin(address newEmergencyAdmin)",
                "function setFollowModule(uint256 profileId, address followModule, bytes followModuleInitData)",
                "function setFollowModuleWithSig(tuple(uint256 profileId, address followModule, bytes followModuleInitData, tuple(uint8 v, bytes32 r, bytes32 s, uint256 deadline) sig) vars)",
                "function setFollowNFTURI(uint256 profileId, string followNFTURI)",
                "function setFollowNFTURIWithSig(tuple(uint256 profileId, string followNFTURI, tuple(uint8 v, bytes32 r, bytes32 s, uint256 deadline) sig) vars)",
                "function setGovernance(address newGovernance)",
                "function setProfileImageURI(uint256 profileId, string imageURI)",
                "function setProfileImageURIWithSig(tuple(uint256 profileId, string imageURI, tuple(uint8 v, bytes32 r, bytes32 s, uint256 deadline) sig) vars)",
                "function setState(uint8 newState)",
                "function sigNonces(address) view returns (uint256)",
                "function supportsInterface(bytes4 interfaceId) view returns (bool)",
                "function symbol() view returns (string)",
                "function tokenByIndex(uint256 index) view returns (uint256)",
                "function tokenDataOf(uint256 tokenId) view returns (tuple(address owner, uint96 mintTimestamp))",
                "function tokenOfOwnerByIndex(address owner, uint256 index) view returns (uint256)",
                "function tokenURI(uint256 tokenId) view returns (string)",
                "function totalSupply() view returns (uint256)",
                "function transferFrom(address from, address to, uint256 tokenId)",
                "function whitelistCollectModule(address collectModule, bool whitelist)",
                "function whitelistFollowModule(address followModule, bool whitelist)",
                "function whitelistProfileCreator(address profileCreator, bool whitelist)",
                "function whitelistReferenceModule(address referenceModule, bool whitelist)"                
            ]
        },
        "lensHubProfileEvents": [
            "event ProfileCreated( uint256 indexed profileId, address indexed creator, address indexed to, string handle, string imageURI, address followModule, bytes followModuleReturnData, string followNFTURI, uint256 timestamp )",
            "event DefaultProfileSet(address indexed wallet, uint256 indexed profileId, uint256 timestamp)",
            "event DispatcherSet(uint256 indexed profileId, address indexed dispatcher, uint256 timestamp)",
            "event ProfileImageURISet(uint256 indexed profileId, string imageURI, uint256 timestamp)",
            "event FollowNFTURISet(uint256 indexed profileId, string followNFTURI, uint256 timestamp)",
            "event FollowModuleSet( uint256 indexed profileId, address followModule, bytes followModuleReturnData, uint256 timestamp )",
            "event PostCreated( uint256 indexed profileId, uint256 indexed pubId, string contentURI, address collectModule, bytes collectModuleReturnData, address referenceModule, bytes referenceModuleReturnData, uint256 timestamp )",
            "event CommentCreated( uint256 indexed profileId, uint256 indexed pubId, string contentURI, uint256 profileIdPointed, uint256 pubIdPointed, bytes referenceModuleData, address collectModule, bytes collectModuleReturnData, address referenceModule, bytes referenceModuleReturnData, uint256 timestamp )",
            "event MirrorCreated( uint256 indexed profileId, uint256 indexed pubId, uint256 profileIdPointed, uint256 pubIdPointed, bytes referenceModuleData, address referenceModule, bytes referenceModuleReturnData, uint256 timestamp )",
            "event FollowNFTDeployed( uint256 indexed profileId, address indexed followNFT, uint256 timestamp )",
            "event CollectNFTDeployed( uint256 indexed profileId, uint256 indexed pubId, address indexed collectNFT, uint256 timestamp )",
            "event Collected( address indexed collector, uint256 indexed profileId, uint256 indexed pubId, uint256 rootProfileId, uint256 rootPubId, bytes collectModuleData, uint256 timestamp )",
            "event Followed( address indexed follower, uint256[] profileIds, bytes[] followModuleDatas, uint256 timestamp )",
            "event FollowNFTTransferred( uint256 indexed profileId, uint256 indexed followNFTId, address from, address to, uint256 timestamp )",
            "event CollectNFTTransferred( uint256 indexed profileId, uint256 indexed pubId, uint256 indexed collectNFTId, address from, address to, uint256 timestamp )",
            "event FollowNFTInitialized(uint256 indexed profileId, uint256 timestamp)",
            "event FollowNFTDelegatedPowerChanged( address indexed delegate, uint256 indexed newPower, uint256 timestamp )",
            "event CollectNFTInitialized( uint256 indexed profileId, uint256 indexed pubId, uint256 timestamp )",
            "event FollowsApproved( address indexed owner, uint256 indexed profileId, address[] addresses, bool[] approved, uint256 timestamp )",
            "event FollowsToggled( address indexed owner, uint256[] profileIds, bool[] enabled, uint256 timestamp )",
            "event ProfileMetadataSet(uint256 indexed profileId, string metadata, uint256 timestamp)",
            "event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)"
        ]          
    }      
}